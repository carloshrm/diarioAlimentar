@page "/diario"
@inject AlimentoService alimentoController

@using diarioAlimentar.Client.Services;
@using diarioAlimentar.Shared

<AuthorizeView>
    <Authorized>
        <p>@context.User.Identity?.Name!</p>
        <p>save</p>
    </Authorized>
    <NotAuthorized>
        <p>no save</p>
    </NotAuthorized>
</AuthorizeView>

<h3>Diario</h3>
<div>
    @foreach (var alm in refeicaoAtual.alimentos)
    {
        <AlimentoView porcao=alm />
    }
</div>
<div>
    <button class="btn btn-primary" @onclick=@(() => mostrarBusca = !mostrarBusca)>Adicionar</button>
    @if (mostrarBusca)
    {
        <div>
            <InputText id="busca" @bind-Value="buscaDigitada"/>
            <button type="button" @onclick="buscarAlimento">Procurar</button>
        </div>
        <div>
            @if (encontrados.Any())
            {
                @foreach (var al in encontrados)
                {
                    <div>
                        <button onclick=@(() => adicionarAlimento(al))>Adicionar</button>
                        <p value=@al.AlimentoID>@al.nome</p>
                    </div>
                }
                <InputNumber @bind-Value=qtd />
            }
        </div>
    }
</div>

<p>@user</p>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private Diario diarioAtual { get; set; }
    private Refeicao refeicaoAtual { get; set; }
    private double qtd { get; set; }

    private bool mostrarBusca { get; set; } = false;
    private string buscaDigitada { get; set; } = "";
    private ICollection<Alimento> encontrados { get; set; }

    private string user;
    protected async override Task OnInitializedAsync()
    {
        diarioAtual = new();
        refeicaoAtual = new Refeicao(Periodo.Lanche);
        encontrados = new List<Alimento>();

        var authState = await authenticationState;
        user = authState.User.Identity.Name;
    }

    private async Task buscarAlimento()
    {
        var al = await alimentoController.GetPorNome(buscaDigitada);
        if (al != null && al.Any())
            encontrados = al;
    }

    private void adicionarAlimento(Alimento al)
    {
        refeicaoAtual.alimentos.Add(new Porcao() { alimento = al, quantidade = qtd });
        
    }
}