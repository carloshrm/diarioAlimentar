@using diarioAlimentar.Shared;

<div id="relatorio-cont">
    <div class="d-flex justify-content-evenly container-transp p-2">
        <div class="table-responsive flex-grow-1">
            <h4>Energia</h4>
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th scope="col">Consumida</th>
                        <th scope="col">Taxa metabólica basal</th>
                        <th scope="col">Balanço</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Math.Round(relatorio.Centesimal.energiaKcal, 2) kcal</td>
                        <td>@bmr kcal</td>
                        <td>@Math.Round(relatorio.Centesimal.energiaKcal - bmr, 2) kcal</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <ApexGauge Percentage=@(Math.Round((decimal)(relatorio.Centesimal.energiaKcal / bmr) * 100, 2)) Label="Calorias" Title="Energia" />
    </div>
    @if (relatorio.Centesimal.energiaKcal > 200)
    {
        <div class="container-transp p-2 my-2">
            <h4>Macronutrientes</h4>
            <div class="d-flex">
                <div class="table-responsive w-50">
                    <table class="table table-sm table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Tipo</th>
                                <th scope="col">Consumido</th>
                                <th scope="col">Alvo</th>
                                <th scope="col">%</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td scope="row">Carboidratos</td>
                                <td>@Math.Round(relatorio.Centesimal.carboidrato, 2) g</td>
                                <td>@Math.Round((bmr * 0.5) / 4) g</td>
                                <td>@(Math.Round((relatorio.Centesimal.carboidrato / Math.Round((bmr * 0.5) / 4)) * 100, 2))</td>
                            </tr>
                            <tr>
                                <td scope="row" class="ps-4">Fibras</td>
                                <td colspan="3">@Math.Round(relatorio.Centesimal.fibras, 2) g</td>
                            </tr>
                            <tr>
                                <td scope="row">Proteinas</td>
                                <td>@Math.Round(relatorio.Centesimal.proteina, 2) g</td>
                                <td>@(Math.Round((bmr * 0.3) / 4))g</td>
                                <td>@(Math.Round((relatorio.Centesimal.proteina / Math.Round((bmr * 0.3) / 4)) * 100, 2))</td>
                            </tr>
                            <tr>
                                <td scope="row">Gorduras</td>
                                <td>@Math.Round(relatorio.Gorduras.GetGordurasTotais(), 2) g</td>
                                <td>@(Math.Round((bmr * 0.2) / 4))g</td>
                                <td>@(Math.Round((relatorio.Gorduras.GetGordurasTotais() / Math.Round((bmr * 0.2) / 9)) * 100, 2))</td>
                            </tr>
                            <tr>
                                <td scope="row" class="ps-4">Saturadas</td>
                                <td colspan="3">@Math.Round(relatorio.Gorduras.sat, 2) g</td>
                            </tr>
                            <tr>
                                <td scope="row" class="ps-4">Monoinsaturadas</td>
                                <td colspan="3">@Math.Round(relatorio.Gorduras.monoinsat, 2) g</td>
                            </tr>
                            <tr>
                                <td scope="row" class="ps-4">Poliinsaturadas</td>
                                <td colspan="3">@Math.Round(relatorio.Gorduras.poliinsat, 2) g</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="flex-grow-1">
                    <ApexChart TItem="AgregaMacro"
                               Title="Resumo Macro" @ref=graficoMacro>

                        <ApexPointSeries TItem="AgregaMacro"
                                         Items="info"
                                         SeriesType="SeriesType.Pie"
                                         Name="Quantidade g/ml"
                                         XValue="@(e => e.def)"
                                         YAggregate="@(e => e.Sum(i => (decimal) i.val))"
                                         OrderByDescending="e=>e.Y" />
                    </ApexChart>
                </div>
            </div>
        </div>
    }
    <button class="btn-diario m-2 btn-sm" @onclick=@(() => resumoSemanal = !resumoSemanal)>Ver Resumo Semanal</button>
    @if (resumoSemanal)
    {
        <div class="m-2 w-50">
            <GraficoSemanal />
        </div>
    }
</div>

@code {
    [Parameter]
    public InfoNutricional relatorio { get; set; }

    [Parameter]
    public double bmr { get; set; }

    private List<AgregaMacro> info;
    private ApexChart<AgregaMacro> graficoMacro;
    private bool resumoSemanal = false;

    protected override void OnParametersSet()
    {
        info = new();
        info.Add(new AgregaMacro() { def = "Gorduras Saturadas", val = relatorio.Gorduras.sat });
        info.Add(new AgregaMacro() { def = "Gorduras Insaturadas", val = relatorio.Gorduras.poliinsat + relatorio.Gorduras.monoinsat });
        info.Add(new AgregaMacro() { def = "Carboidratos", val = relatorio.Centesimal.carboidrato });
        info.Add(new AgregaMacro() { def = "Proteinas", val = relatorio.Centesimal.proteina });
        info.Add(new AgregaMacro() { def = "Fibras", val = relatorio.Centesimal.fibras });
        if (graficoMacro != null)
            graficoMacro.RenderAsync();
    }

    internal class AgregaMacro
    {
        public string def { get; set; } = "";
        public double val { get; set; } = 0;
    }
}
