@using diarioAlimentar.Client.Services;
@using diarioAlimentar.Shared;
@inject AlimentoService alimentoService

<div class="porcao-view">
    <div class=@("porcao-container" + (ativa ? "-at" : ""))>
        <p class="alimento-nome">@porcao.Alimento.nome</p>
        <p class="alimento-quantidade">Quantidade: @(porcao.quantidade * 100) g/ml</p>
        <p class="alimento-energia">Energia: @(Math.Round(porcao.Alimento.informacao.Centesimal.energiaKcal * porcao.quantidade, 2)) kcal</p>
        <div class="alimento-btn">
            <button @onclick=@(() => detalhes = !detalhes)
                    class="btn-diario-alt oi @(detalhes ? "oi-minus" : "oi-plus")"><span>Detalhes</span>
            </button>
            <button class="btn-diario-alt oi oi-circle-x" @onclick=@(() => callbackDelete(porcao))><span>Remover</span></button>
        </div>
    </div>
    @if (detalhes)
    {
        <div class="porcao-detalhes">
            <table class="info-nt table">
                <thead>
                    <tr>
                        <th scope="col">Info</th>
                        <th scope="col">Valor</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td scope="row">Energia</td>
                        <td scope="row">@(porcao.Alimento.informacao.Centesimal.energiaKcal * porcao.quantidade) kcal</td>
                    </tr>
                    <tr>
                        <td scope="row">Carboidratos</td>
                        <td scope="row">@(porcao.Alimento.informacao.Centesimal.carboidrato * porcao.quantidade)g</td>
                    </tr>
                    <tr>
                        <td scope="row">Gorduras</td>
                    </tr
                    <tr>
                        <td scope="col" class="px-5">Saturadas</td>
                        <td scope="row">@(porcao.Alimento.informacao.Gorduras.sat * porcao.quantidade)g</td>
                    </tr>
                    <tr>
                        <td scope="col" class="px-5">Monoinsaturadas</td>
                        <td scope="row">@(porcao.Alimento.informacao.Gorduras.monoinsat * porcao.quantidade)g</td>
                    </tr>
                    <tr>
                        <td scope="col" class="px-5">Poliinsaturadas</td>
                        <td scope="row">@(porcao.Alimento.informacao.Gorduras.poliinsat * porcao.quantidade)g</td>
                    </tr>
                    <tr>
                        <td scope="row">Fibras</td>
                        <td scope="row">@(porcao.Alimento.informacao.Centesimal.fibras * porcao.quantidade)g</td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    [Parameter]
    public Porcao porcao { get; set; }

    [Parameter]
    public Action<Porcao> callbackDelete { get; set; }

    [Parameter]
    public bool ativa { get; set; }

    private bool detalhes = false;

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);
        if (parameters.TryGetValue<Porcao>(nameof(porcao), out var value))
        {
            if (value.Alimento == null)
                value.Alimento = await alimentoService.GetPorID(value.alimentoID);
            porcao = value;
        }
        await base.SetParametersAsync(ParameterView.Empty);
    }
}
