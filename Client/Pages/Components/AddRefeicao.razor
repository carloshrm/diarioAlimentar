@using diarioAlimentar.Client.Services;
@using diarioAlimentar.Shared;
@inject RefeicaoService _refeicaoService;

<div id="add-ref-view">
    <button class="btn-diario" @onclick=@(() => mostrar = !mostrar)>Adicionar Refeicao</button>
    @if (mostrar)
    {
        <div id="adicionar-ref-container">
            <h4>Periodo: </h4>
            <select @bind=@periodoSelecionado>
                @foreach (var pr in Enum.GetValues(typeof(Periodo)))
                {
                    <option value="@pr" "@(pr == GetPeriodoatual() ? "selected" : "")">@pr</option>
                }
            </select>
            <button class="btn-diario-ct" @onclick=@(async () => CriarNovaRefeicao(new Refeicao() { periodo = periodoSelecionado }))>Adicionar</button>
        </div>
    }
</div>

@code {
    [Parameter]
    public Diario diarioAtual { get; set; }

    [Parameter]
    public Action callbackAtualizar { get; set; }

    private Periodo periodoSelecionado { get; set; } = Periodo.Lanche;
    private bool mostrar { get; set; } = false;

    private async void CriarNovaRefeicao(Refeicao novaRefeicao)
    {
        diarioAtual.AdicionarRefeicao(novaRefeicao);
        await _refeicaoService.AddRefeicao(novaRefeicao);
        mostrar = false;
        callbackAtualizar();
    }
}
