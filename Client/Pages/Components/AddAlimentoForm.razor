@using diarioAlimentar.Client.Services;
@using diarioAlimentar.Shared;
@inject AlimentoService alimentoService

<div id="alimento_form_cont">
    <button class="btn btn-primary" @onclick=@(() => mostrarBusca = !mostrarBusca)>Adicionar</button>
    @if (mostrarBusca)
    {
        <div>
            <p>Adicionar um alimento: </p>
            <div>
                <span class="oi oi-magnifying-glass"></span>
                <InputText id="busca" @bind-Value="buscaDigitada" @onkeydown="BuscaDigitadaHandler" />
                <button type="button" @onclick="BuscarAlimento">Procurar</button>
            </div>
        </div>
        <div id="result_busca_cont">
            @if (encontrados.Any())
            {
                @foreach (var cat in encontrados.GroupBy(a => a.categoria))
                {
                    <div>
                        <h4>@cat.Key.GetNomeCategoria()</h4>
                        @foreach (var al in cat)
                        {
                            <div class="result_alim">
                                <button class="oi oi-plus" onclick=@(() => AdicionarAlimento(al))></button>
                                <p value=@al.AlimentoID>@al.nome</p>
                            </div>
                        }
                    </div>
                }
                <p><InputNumber @bind-Value=qtd />g/ml</p>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public Action<Porcao> refSetter { get; set; }

    private bool mostrarBusca { get; set; } = false;
    private string buscaDigitada { get; set; } = "";
    private double qtd { get; set; } = 1;
    private ICollection<Alimento> encontrados { get; set; }

    protected override void OnInitialized()
    {
        encontrados = new List<Alimento>();
    }

    private void AdicionarAlimento(Alimento al)
    {
        refSetter.Invoke(new Porcao() { Alimento = al, quantidade = qtd, alimentoID = al.AlimentoID });
        mostrarBusca = !mostrarBusca;
        qtd = 1;
    }

    private void BuscaDigitadaHandler(KeyboardEventArgs e)
    {
        Console.WriteLine(e.Key);
    }

    private async Task BuscarAlimento()
    {
        if (buscaDigitada.Length == 0) return;
        var al = await alimentoService.GetPorNome(buscaDigitada);
        if (al != null && al.Any())
            encontrados = al;
    }
}
